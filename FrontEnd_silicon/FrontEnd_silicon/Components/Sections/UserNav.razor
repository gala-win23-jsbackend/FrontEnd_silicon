@using FrontEnd_silicon.Data
@using System.Net.Http.Headers
@attribute [StreamRendering]
@rendermode InteractiveServer
@inject HttpClient Http

@if (User == null)
{
    <p>Loading...</p>

}
else
{
    <div class="user">
        <div class="info">
            <div class="user-img">
                @if (User.UserProfile != null)
                {
                    <img src="@User.UserProfile.ProfileImage" alt="profile image">
                }
                else
                {
                    <img src="/images/upload/avatar.svg" alt="default profile image">
                }
                <EditForm enctype="multipart/form-data" Model="@uploadModel" FormName="ProfileUpload">
                    <InputFile id="uploadFile" OnChange="HandleFileSelected" name="file" hidden />
                    <label for="uploadFile" class="btn btn-circle btn-circle-sm"><i class="fa-regular fa-refresh"></i></label>
                </EditForm>
            </div>

            <h6 class="name">@User.UserProfile!.FirstName @User.UserProfile.LastName</h6>
            <p class="email">@User.Email</p>
        </div>
        <div class="btn-user">
            <NavLink href="/profile/details"><button class="button btn active"><i class="fa-solid fa-gear"></i> Account Details</button></NavLink>
            <NavLink href="/profile/security"><button class="button btn"><i class="fa-solid fa-lock"></i> Security</button></NavLink>
            <NavLink href="/profile/notifications"><button class="button btn"><i class="fa-regular fa-bell"></i> Notifications</button></NavLink>
            <NavLink href="/profile/messages"><button class="button btn"><i class="fa-regular fa-message"></i> Messages</button></NavLink>
            <NavLink href="/profile/savedcourses"><button class="button btn"><i class="fa-regular fa-bookmark"></i> Saved Items</button></NavLink>
            <form action="Account/Logout" method="post">
                <AntiforgeryToken />
                <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                <button type="submit" class="signout button btn">
                    <i class="fa-solid fa-right-from-bracket"></i>
                    Sign Out
                </button>
            </form>

        </div>
    </div>
}


@code {
    private string? currentUrl { get; set; }
    [Parameter]
    public ApplicationUser User { get; set; } = null!;

    private MultipartFormDataContent uploadModel = new MultipartFormDataContent();
    private IBrowserFile? selectedFile;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    private async Task HandleFileSelected(InputFileChangeEventArgs e)
    {
        selectedFile = e.File;

        await HandleProfileImgUpload();
    }

    public async Task HandleProfileImgUpload()
    {
        if (selectedFile != null)
        {
            using var content = new MultipartFormDataContent();
            var fileContent = new StreamContent(selectedFile.OpenReadStream(maxAllowedSize: 1024 * 1024 * 15));
            fileContent.Headers.ContentType = new MediaTypeHeaderValue(selectedFile.ContentType);
            content.Add(fileContent, "file", selectedFile!.Name);

            try
            {
                var response = await Http.PostAsync("https://fileprovider-silicon-gala.azurewebsites.net/api/Upload?code=wshQh1tCknVn5sKPrO8A10_4iJJhzpeEQEP5CnMeFibbAzFuHa3_cg%3D%3D", content);
                if (response.IsSuccessStatusCode)
                {
                    var filePath = await response.Content.ReadAsStringAsync();
                    if (filePath != null)
                        await UpdateUserProfileImagePath(filePath, User.Id);

                    await InvokeAsync(StateHasChanged);
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
            }
        }
    }



    private async Task<bool> UpdateUserProfileImagePath(string filePath, string userId)
    {
        UserProfileModel userProfileModel = new UserProfileModel
            {
                ProfileImage = filePath,
                UserId = userId
            };
        var response = await Http.PostAsJsonAsync("https://userprovider-silicon-gala.azurewebsites.net/api/UpdateProfileImg?code=-AJhkgwmultApd85PuKzxGFXw4HkPxHUZ0M1mp0cSE72AzFusUsQdA%3D%3D", userProfileModel);
        if (response.IsSuccessStatusCode)
        {
            return true;
        }
        return false;
    }
    public class UserProfileModel
    {
        public string UserId { get; set; } = null!;
        public string ProfileImage { get; set; }= null!;
    }
}