@page "/contact"
@using System.ComponentModel.DataAnnotations

<section class="contact">
    <div class="container">
        <div class="home-contact">
            <a class="home-and-contact" asp-controller="Default" asp-action="Home">

                <i class="fa-solid fa-house"></i>
                <p class="home">Home</p>
            </a>

            <i class="fa-solid fa-angles-right"></i>
            <p class="contact">Contact</p>
        </div>

        <div class="contact-info">
            <h1>Contact Us</h1>

            <div class="email-us">
                <div class="email-icone">
                    <div class="round">
                        <i class="fa-regular fa-envelope"></i>
                    </div>
                </div>

                <div class="email-text">
                    <h4>Email Us</h4>
                    <p>Please feel free to drop us a line. We will respond as soon as possible.</p>
                    <a href="#">Leave a message <i class="fa-solid fa-arrow-right-long"></i></a>
                </div>
            </div>

            

            <div class="careers">
                <div class="careers-icone">
                    <div class="round">
                        <i class="fa-solid fa-user-plus"></i>
                    </div>
                </div>

                <div class="careers-text">
                    <h4>Careers</h4>
                    <p>Sit ac ipsum leo lorem magna nunc mattis maecenas non vestibulum.</p>
                    <a href="/chat">Start live chat <i class="fa-solid fa-arrow-right-long"></i></a>
                </div>
            </div>

            <div class="get-in-contact-form">

                <h2>Get In Contact With Us</h2>
              

                @if (!string.IsNullOrEmpty(errorMessage))
                {
                    <div class="alert alert-danger">
                        @errorMessage
                    </div>
                }


                 <div class="contact-form">
                    <form method="post" novalidate>
                        <div class="form-group">

                            <div id="contact-fullname" class="input-group">
                                <label asp-for="Form.FullName">Full Name</label>
                                <span asp-validation-for="Form.FullName"> </span>
                                <input asp-for="Form.FullName" />
                            </div>

                            <div id="contact-email" class="input-group">
                                <label asp-for="Form.Email"></label>
                                <span asp-validation-for="Form.Email"> </span>
                                <input asp-for="Form.Email" />
                            </div>

                           @*  <div class="lable">
                                <label >Service (optional)</label>
                                <i class="fa-solid fa-angle-down"></i>
                            </div>

                            <select class="form-control" id="service" name="Form.SelectedService">

                                <option value="default">Choose the service you are interested in</option>
                                <option value="frontend-development">Frontend Development</option>
                                <option value="app-development">App Development</option>
                                <option value="design">Design</option>
                                <option value="phyton">Phyton Development</option>
                                <option value="game-development">Game Development</option>
                                <option value="other">Other</option>
                            </select> *@

                            <select @bind="@value" class="form-select" data-control="select2" data-placeholder="Select an option">
                                <option></option>
                               
                                <option value="1">Choose the service you are interested in</option>
                                <option value="2">Frontend Development</option>
                                <option value="3">App Development</option>
                                <option value="4">Design</option>
                                <option value="5">Phyton Development</option>
                                <option value="6">Game Development</option>
                                <option value="7">Other</option>
                            </select>



                            <div id="contact-message" class="input-group">
                                <label >Message</label>
                               
                                <textarea asp-for="Form.Message" class="form-control" rows="5" placeholder="Enter your message"></textarea>
                            </div>



                            <button type="submit" class="btn-theme">Send Contact Request</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

    </div>

    <div class="map">
        <iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d260535.41276248198!2d17.652423731277125!3d59.325725903858036!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x465f763119640bcb%3A0xa80d27d3679d7766!2sStockholm!5e0!3m2!1sen!2sse!4v1710699415511!5m2!1sen!2sse"
                width="100%"
                height="870"
                style="border:0;"
                allowFullScreen=""
                loading="lazy"
                referrerPolicy="no-referrer-when-downgrade"
                title="Google Maps">
        </iframe>
    </div>
</section>

@code {

    private string? errorMessage;

    public class ContactViewModel
    {
        public string Title { get; set; } = "Contact Us";
        public ContactModel Form { get; set; } = new ContactModel();
    }
    public class ContactModel
    {
        [DataType(DataType.Text)]
        [Display(Name = "Full Name", Prompt = "Enter your full name", Order = 0)]
        [Required(ErrorMessage = "Full name is required")]
        [MinLength(4, ErrorMessage = "Full name must be at least 4 characters long")]
        public string FullName { get; set; } = null!;

        [DataType(DataType.EmailAddress)]
        [Display(Name = "Email", Prompt = "Enter your email address", Order = 1)]
        [Required(ErrorMessage = "Email is required")]
        [RegularExpression(@"^(?=.*[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,})[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$",
        ErrorMessage = "The email format is not valid.")]
        public string Email { get; set; } = null!;

        [Display(Name = "Service (optional)", Prompt = "Choose the service you are interested in", Order = 2)]
        public string? SelectedService { get; set; }

        [Display(Name = "Message", Prompt = "Enter your message here", Order = 3)]
        [Required(ErrorMessage = "Message is required")]
        [MinLength(2, ErrorMessage = "Message must be at least 2 characters long")]
        public string Message { get; set; } = null!;
    }


    
        private string value { get; set; } = null!;


        private void onChange(ChangeEventArgs e) => value = e.Value!.ToString()!;
    

}
 